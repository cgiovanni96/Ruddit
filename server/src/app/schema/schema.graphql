# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CreatePostInputType {
  subrudditId: String = "407f980e-db50-4354-9c30-03dbf96c3da4"
  text: String!
  title: String!
}

input CreateSubrudditInputType {
  description: String!
  name: String!
  slug: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type FieldError {
  field: String!
  message: String!
}

input LoginInputType {
  email: String
  name: String
  password: String!
}

type Mutation {
  changePassword(newPassword: String!, token: String!): UserResponse!
  createPost(data: CreatePostInputType!): Post
  createSubruddit(data: CreateSubrudditInputType!): Subruddit
  deletePost(id: String!): Boolean!
  forgotPassword(email: String!): Boolean!
  login(data: LoginInputType!): UserResponse!
  logout: Boolean!
  register(data: UserInputType!): UserResponse!
  updatePost(data: UpdatePostInputType!, id: String!): Post
  vote(postId: String!, value: Int!): Boolean!
}

type PaginatedPostsResponse {
  hasMore: Boolean!
  posts: [Post!]!
}

type Post {
  author: User!
  authorId: String!
  createdAt: String!
  id: String!
  points: Float!
  subruddit: Subruddit!
  subrudditId: String!
  text: String!
  textSnippet: String!
  title: String!
  updatedAt: String!
  voteStatus: Int
}

type Query {
  easyPosts: [Post!]!
  hello: String!
  me: User
  post(id: String!): Post
  posts(cursor: String, limit: Int!, subrudditId: String): PaginatedPostsResponse!
  subruddit(id: String!): Subruddit!
  subruddits: [Subruddit!]!
}

type Subruddit {
  admin: User!
  adminId: String!
  createdAt: String!
  description: String!
  id: String!
  name: String!
  slug: String!
  updatedAt: String!
}

input UpdatePostInputType {
  text: String
  title: String
}

type User {
  createdAt: DateTime!
  email: String!
  id: String!
  name: String!
  updatedAt: DateTime!
}

input UserInputType {
  email: String!
  name: String!
  password: String!
}

type UserResponse {
  errors: [FieldError!]
  user: User
}
